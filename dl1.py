# -*- coding: utf-8 -*-
"""DL1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xOm9WVhxmNayILuWEfPUjZM15rw05Ryn
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split

df = pd.read_csv('BostonHousingData.csv')

df

x = df.drop('MEDV',axis = 1).values
y = df['MEDV'].values

x.shape

y.shape

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2)

mean = x_train.mean(axis = 0)
std = x_train.std(axis = 0)
x_train = (x_train-mean)/std
x_test = (x_test-mean)/std

x_train[0]

y_train[0]

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

model = Sequential()
model.add(Dense(128,activation = 'relu',input_shape=(x_train[0].shape)))
model.add(Dense(64,activation = 'relu'))
model.add(Dense(1,activation = 'linear'))
model.compile(optimizer='adam',loss = 'mse',metrics=['mae'])
model.summary()

model.fit(x_train,y_train,epochs = 100,batch_size =1,verbose = 1,validation_data = (x_test,y_test))

x_test[8]

print("Actual Output",y_test[8])
test_input = [[-0.40034805,  0.81102558, -0.91592429, -0.26761547, -1.09086124,
        0.14519596, -2.16403502,  1.5210412 , -0.41268923, -0.65531427,
       -0.97005635,  0.20141079, -1.04876116]]
y_pred = model.predict(test_input)
print("Predicted Output",y_pred)

mse_nn,mae_nn = model.evaluate(x_test,y_test)
print("mse",mse_nn)
print("mae",mae_nn)